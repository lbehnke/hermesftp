#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.apporiented.hermesftp.utils.LoggingWriter
	c16020 [label=<<table title="com.apporiented.hermesftp.utils.LoggingWriter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./LoggingWriter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LoggingWriter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LoggingWriter(out : OutputStream, flush : boolean) </td></tr>
<tr><td align="left" balign="left"> + LoggingWriter(out : Writer, flush : boolean) </td></tr>
<tr><td align="left" balign="left"> + println(text : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.apporiented.hermesftp.utils.LoggingWriter extends java.io.PrintWriter
	c16035:p -> c16020:p [dir=back,arrowtail=empty];
	// java.io.PrintWriter
	c16035 [label=<<table title="java.io.PrintWriter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/io/PrintWriter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PrintWriter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # out : Writer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PrintWriter(arg0 : Writer) </td></tr>
<tr><td align="left" balign="left"> + PrintWriter(arg0 : Writer, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + PrintWriter(arg0 : OutputStream) </td></tr>
<tr><td align="left" balign="left"> + PrintWriter(arg0 : OutputStream, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + PrintWriter(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + PrintWriter(arg0 : String, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + PrintWriter(arg0 : File) </td></tr>
<tr><td align="left" balign="left"> + PrintWriter(arg0 : File, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + flush() </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + checkError() : boolean </td></tr>
<tr><td align="left" balign="left"> # setError() </td></tr>
<tr><td align="left" balign="left"> # clearError() </td></tr>
<tr><td align="left" balign="left"> + write(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + write(arg0 : char[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + write(arg0 : char[]) </td></tr>
<tr><td align="left" balign="left"> + write(arg0 : String, arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + write(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : char) </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : float) </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : double) </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : char[]) </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : Object) </td></tr>
<tr><td align="left" balign="left"> + println() </td></tr>
<tr><td align="left" balign="left"> + println(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + println(arg0 : char) </td></tr>
<tr><td align="left" balign="left"> + println(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + println(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + println(arg0 : float) </td></tr>
<tr><td align="left" balign="left"> + println(arg0 : double) </td></tr>
<tr><td align="left" balign="left"> + println(arg0 : char[]) </td></tr>
<tr><td align="left" balign="left"> + println(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + println(arg0 : Object) </td></tr>
<tr><td align="left" balign="left"> + printf(arg0 : String, arg1 : Object[]) : PrintWriter </td></tr>
<tr><td align="left" balign="left"> + printf(arg0 : Locale, arg1 : String, arg2 : Object[]) : PrintWriter </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : String, arg1 : Object[]) : PrintWriter </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : Locale, arg1 : String, arg2 : Object[]) : PrintWriter </td></tr>
<tr><td align="left" balign="left"> + append(arg0 : CharSequence) : PrintWriter </td></tr>
<tr><td align="left" balign="left"> + append(arg0 : CharSequence, arg1 : int, arg2 : int) : PrintWriter </td></tr>
<tr><td align="left" balign="left"> + append(arg0 : char) : PrintWriter </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

