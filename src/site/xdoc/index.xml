<?xml version="1.0" encoding="iso-8859-1"?>
<document>
	<properties>
		<title>Hermes FTP Project</title>
		<author email="nospam.AT.larsbehnke.DOT.net">Lars Behnke</author>
	</properties>
	<meta
		name="keyword"
		content="ftp, java, spring, rfc959, hermes" />
	<body>
	    <section name="Introduction">
		<subsection name="Overview">
			<p>
				Hermes FTP Server is a free, cross-platform FTP server adhering to RFC 959, RFC 2228, and RFC 2389. 
				It is being developed in Java with a strong focus on security and extensibility. 
				Currently, these features are supported:
				<ul>
					<li>Active and passive transfer mode.</li>
					<li>Customizable data channel ports (firewall friendly).</li>
					<li>Block transmission mode and mainframe record structure.</li>
					<li>ASCII, EBCDIC, and UTF-8 codepages.</li>
					<li>Data encryption via 128-Bit Secure Sockets Layer (SSL/TLS).</li>
					<li>Authentication via implicit or explicit SSL/TLS.</li>
					<li>Executable as Windows service or Linux daemon.</li>
					<li>Management of users and user groups via XML file.</li>
					<li>Supports anonymous FTP users.</li>
					<li>Group based resource consumption limits</li>
					<li>User/group based data access control.</li>
					<li>User password encryption.</li>
					<li>Per-user and per-session statistics.</li>
					<li>Embedded web console for monitoring statistics, logs etc. via browser.</li>
					<li>Configurable log4j logging.</li>
					<li>Strong focus on extensibility and abilitity to integrate into different environments.</li>
					
					<!-- <li>Upload/Download quota</li>
						<li>Anti hammering feature</li>
					-->
				</ul>
			</p>
			<p>
				Hermes FTP server is a console application, configured exclusively through XML
				files. An embedded web console allows for
				monitoring resource consumption, session statistics, user statistics and log files.
			</p>
		</subsection>
		<subsection name="Motivation">
			<p>
				The development of yet another FTP server was driven by the motivation to provide a
				flexible, customizable software that is able to integrate into different
				environments, such as J2EE. There are other open source FTP servers available, which are
				implemented in Java and provide some basic functionality. However, I came to the
				conclusion that none of them meets our needs in terms of security (SSL/TLS) and extensibility.
			</p>
			<p>
				Apart from FTP specific settings, such as connection limits or supported cipher
				suites, the internal structure of the application can be configured as well. You can
				implement new commands or modify existing commands without the need to recompile the
				Hermes FTP server application. Hence, by reimplementing a subset of the FTP command
				classes, you could make Hermes FTP server behave like an EJB client delegating
				requests directly to an application server instead of accessing the local file
				system.
			</p>
			<p>
				If you are familiar with the
				<a href="http://www.springframework.org/">Spring Framework</a>
				you are probably also familiar with the concept of "dependency injection", also
				known as "inversion of control". Hermes FTP is based on the Spring Framework and
				hence adopts this concept making it easy to implement extensions.
			</p>
			<br/>
			<p>
				<div align="right">
					<a
						href="http://clustrmaps.com/counter/maps.php?url=http://hermesftp.sourceforge.net"
						id="clustrMapsLink">
						<img
							src="http://clustrmaps.com/counter/index2.php?url=http://hermesftp.sourceforge.net"
							border="0px"
							alt="Locations of visitors to this page"
							onError="this.onError=null; this.src='http://www.meetomatic.com/images/clustrmaps-back-soon.jpg'; document.getElementById('clustrMapsLink').href='http://clustrmaps.com/'" />
					</a>
				</div>
			</p>
		</subsection>
		</section>
	</body>
</document>
